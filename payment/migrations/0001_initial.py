# Generated by Django 5.2.4 on 2025-08-21 07:27

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('task', '0002_taskqr'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(choices=[('VND', 'Vietnamese Dong'), ('USD', 'US Dollar')], default='VND', max_length=3)),
                ('status', models.CharField(choices=[('NONE', 'None'), ('HELD', 'Held in Escrow'), ('RELEASING', 'Releasing'), ('RELEASED', 'Released'), ('REFUNDED', 'Refunded')], default='NONE', max_length=16)),
                ('platform_fee_percent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Phần trăm phí nền tảng trên amount, ví dụ 10.00 = 10%', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('platform_fee_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Số tiền phí đã tính (snapshot)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payments_made', to=settings.AUTH_USER_MODEL)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='payment', to='task.task')),
                ('tasker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payments_received', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentIntent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(choices=[('VND', 'Vietnamese Dong'), ('USD', 'US Dollar')], default='VND', max_length=3)),
                ('status', models.CharField(choices=[('CREATED', 'Created'), ('REQUIRES_ACTION', 'Requires Action'), ('AUTHORIZED', 'Authorized (Escrow funded)'), ('CANCELED', 'Canceled'), ('EXPIRED', 'Expired')], default='CREATED', max_length=32)),
                ('provider', models.CharField(choices=[('MOCK', 'Mock Provider'), ('TAZAPAY', 'Tazapay')], default='MOCK', max_length=16)),
                ('provider_ref', models.CharField(blank=True, help_text='ID/order_id từ provider', max_length=128, null=True)),
                ('checkout_url', models.URLField(blank=True, null=True)),
                ('client_secret', models.CharField(blank=True, max_length=128, null=True)),
                ('idempotency_key', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payment_intents', to=settings.AUTH_USER_MODEL)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='payment_intent', to='task.task')),
            ],
        ),
        migrations.CreateModel(
            name='ProviderWebhookLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('MOCK', 'Mock Provider'), ('TAZAPAY', 'Tazapay')], default='MOCK', max_length=16)),
                ('event', models.CharField(max_length=64)),
                ('provider_ref', models.CharField(blank=True, max_length=128, null=True)),
                ('signature', models.CharField(blank=True, max_length=256, null=True)),
                ('payload', models.JSONField(default=dict)),
                ('received_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['provider', 'provider_ref'], name='payment_pro_provide_ed8a45_idx'), models.Index(fields=['processed'], name='payment_pro_process_4b383c_idx'), models.Index(fields=['received_at'], name='payment_pro_receive_312fc3_idx')],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('available_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('pending_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=14)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('ESCROW_RELEASE', 'Escrow Release to Tasker'), ('PLATFORM_FEE', 'Platform Fee Income'), ('REFUND', 'Refund to Client'), ('ADJUSTMENT', 'Manual Adjustment')], max_length=32)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('memo', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ref_intent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payment.paymentintent')),
                ('ref_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payment.payment')),
                ('ref_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='task.task')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='payment.wallet')),
            ],
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='payment_pay_status_124d3d_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentintent',
            index=models.Index(fields=['status'], name='payment_pay_status_0ad574_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentintent',
            index=models.Index(fields=['provider', 'provider_ref'], name='payment_pay_provide_6a360f_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['type'], name='payment_wal_type_ec89a7_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['created_at'], name='payment_wal_created_f6fce8_idx'),
        ),
    ]
