# Generated by Django 5.2.4 on 2025-08-19 06:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='category_icons/')),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='task.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='VND', max_length=10)),
                ('location_text', models.CharField(blank=True, max_length=255)),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('scheduled_start', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('posted', 'Posted'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('client_confirmed', 'Client Confirmed'), ('disputed', 'Disputed'), ('cancelled_by_client', 'Cancelled by Client'), ('cancelled_by_tasker', 'Cancelled by Tasker'), ('cancelled_by_system', 'Cancelled by System'), ('expired', 'Expired')], default='posted', max_length=32)),
                ('attributes', models.JSONField(blank=True, default=dict)),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='task.category')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_created', to=settings.AUTH_USER_MODEL)),
                ('tasker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_taken', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='task_attachments/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='task.task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskerSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('expert', 'Expert')], default='beginner', max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasker_skills', to='task.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasker_skills', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(choices=[('created', 'Created'), ('published', 'Published'), ('assigned', 'Assigned'), ('started', 'Started'), ('completed', 'Completed'), ('confirmed', 'Client Confirmed'), ('disputed', 'Disputed'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('status_changed', 'Status Changed')], max_length=32)),
                ('from_status', models.CharField(blank=True, max_length=32)),
                ('to_status', models.CharField(blank=True, max_length=32)),
                ('note', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_events', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='task.task')),
            ],
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent', 'sort_order'], name='task_catego_parent__e46705_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['slug'], name='task_catego_slug_d47e76_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['is_active'], name='task_catego_is_acti_53ff07_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status', 'category', '-posted_at'], name='task_task_status_c4bd72_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['client', '-created_at'], name='task_task_client__bf5226_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['tasker', '-created_at'], name='task_task_tasker__911b7e_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status'], name='task_task_status_5e4c6f_idx'),
        ),
        migrations.AddIndex(
            model_name='taskattachment',
            index=models.Index(fields=['task', '-uploaded_at'], name='task_taskat_task_id_c4f8b1_idx'),
        ),
        migrations.AddIndex(
            model_name='taskerskill',
            index=models.Index(fields=['user', 'category'], name='task_tasker_user_id_8c3574_idx'),
        ),
        migrations.AddIndex(
            model_name='taskerskill',
            index=models.Index(fields=['category'], name='task_tasker_categor_7412fb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='taskerskill',
            unique_together={('user', 'category')},
        ),
        migrations.AddIndex(
            model_name='taskevent',
            index=models.Index(fields=['task', '-created_at'], name='task_taskev_task_id_746cbd_idx'),
        ),
        migrations.AddIndex(
            model_name='taskevent',
            index=models.Index(fields=['event'], name='task_taskev_event_f3587f_idx'),
        ),
    ]
